<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d"
                    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"                     
                    xmlns:w="clr-namespace:Synth.WPF"
                    xmlns:c="clr-namespace:Synth.WPF.Controls"
                    xmlns:v="clr-namespace:Synth.WPF.Converters">

    <Style TargetType="TextBlock" BasedOn="{x:Static w:Resources.DefaultTextStyle}"/>
    <Style TargetType="TextBox" BasedOn="{x:Static w:Resources.DefaultTextStyle}"/>
    <Style TargetType="Button" BasedOn="{x:Static w:Resources.DefaultTextStyle}"/>
    <Style TargetType="CheckBox" BasedOn="{x:Static w:Resources.DefaultTextStyle}"/>
    <Style TargetType="ListBox" BasedOn="{x:Static w:Resources.DefaultTextStyle}"/>
    <Style TargetType="ComboBox" BasedOn="{x:Static w:Resources.DefaultTextStyle}"/>
           
    <LinearGradientBrush x:Key="LightingBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="Black" Offset="0"/>
        <GradientStop Color="SlateGray" Offset="0.5"/>
        <GradientStop Color="LightGray" Offset="1"/>
    </LinearGradientBrush>

    <Style x:Key="ModWheelStyle" TargetType="c:MeteredSlider">
        <Setter Property="Width" Value="20"/>
        <Setter Property="MaxWidth" Value="20"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="ThumbTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Rectangle x:Name="ThumbRect" DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=c:MeteredSlider}}" Visibility="Collapsed"/>
                        <Border CornerRadius="4"  Background="{StaticResource LightingBrush}"
                            Height="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=c:MeteredSlider}, Path=Value, Converter={x:Static v:ModWheelConverter.ThumbSize}, ConverterParameter={x:Reference ThumbRect}}">
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TrackTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid ClipToBounds="True">
                        <Rectangle x:Name="TrackRect" Fill="{StaticResource LightingBrush}" DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=c:MeteredSlider}}">
                            <Rectangle.LayoutTransform>
                                <ScaleTransform ScaleY="-1"/>
                            </Rectangle.LayoutTransform>
                        </Rectangle>
                        <Line X1="10" X2="10" Y1="0" Y2="600" Stroke="Black" StrokeThickness="20" HorizontalAlignment="Center" StrokeDashArray="0.1,0.1" VerticalAlignment="Center" Margin="-1000" Opacity="0.6" RenderTransformOrigin="0.5,0.5"
                              DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=c:MeteredSlider}}">
                            <Line.RenderTransform>
                                <TranslateTransform Y="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=c:MeteredSlider}, Path=Value, Converter={x:Static v:ModWheelConverter.TrackOffset}, ConverterParameter={x:Reference TrackRect}}"/>
                            </Line.RenderTransform>
                        </Line>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="MeterControlDefaultTemplate" TargetType="c:MeterControl">
        <Grid HorizontalAlignment="Center" Margin="4" Width="5" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
            <Border x:Name="track"  CornerRadius="2" UseLayoutRounding="False" SnapsToDevicePixels="True" BorderBrush="Black" BorderThickness="1">
                <Border.Background>
                    <SolidColorBrush Color="{x:Static w:Resources.TrackColor}" po:Freeze="True"/>
                </Border.Background>
            </Border>

            <Grid x:Name="Thermometer" Visibility="{Binding IsActive, Converter={x:Static v:ValueToVisibilityConverter.CollapsedWhenEqual}, ConverterParameter=False}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Rectangle Grid.Row="1" RenderTransformOrigin="0.5,1" Height="{Binding ElementName=Thermometer, Path=ActualHeight}">
                    <Rectangle.LayoutTransform>
                        <ScaleTransform ScaleY="{Binding MeterPosition}"/>
                    </Rectangle.LayoutTransform>
                </Rectangle>

                <Border Grid.Row="1" CornerRadius="2" RenderTransformOrigin="0.5,1" UseLayoutRounding="False" SnapsToDevicePixels="True" ClipToBounds="True" Margin="1,0">
                    <Border.Background>
                        <SolidColorBrush Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MeterColor}" po:Freeze="True"/>
                    </Border.Background>
                </Border>
            </Grid>

            <Border x:Name="overflowLight"  Grid.Row="0" Background="Red" Height="8" VerticalAlignment="Top" CornerRadius="2">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding OverflowIndicator}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsOverflowed}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsActive}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>

                <Rectangle Height="2" VerticalAlignment="Bottom" Fill="Red"/>
            </Border>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="MeteredSliderDefaultThumbTemplate" TargetType="Thumb">
        <Border Height="10" Width="20" BorderThickness="1" BorderBrush="Black" Background="LightGray" CornerRadius="3"/>
    </ControlTemplate>

    <ControlTemplate x:Key="MeteredSliderDefaultTrackTemplate">
        <c:MeterControl DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=c:MeteredSlider}}" 
                Value="{Binding SliderPosition, Mode=OneWay}"
                IsActive="{Binding IsEnabled, Converter={x:Static v:BooleanNegationConverter.Instance}}"/>
    </ControlTemplate>

    <DataTemplate x:Key="TickTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="0"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" SharedSizeGroup="ticks"/>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="*" SharedSizeGroup="ticks"/>
            </Grid.ColumnDefinitions>
            <Control x:Name="referenceHolder" Visibility="Collapsed" DataContext="{Binding ElementName=ticks, Path=DataContext}"/>
            <Grid Grid.Row="2">
                <Grid.LayoutTransform>
                    <ScaleTransform ScaleY="{Binding Path=Value, Converter={x:Static c:ValueToTickLocationConverter.Instance}, ConverterParameter={x:Reference referenceHolder}}"/>
                </Grid.LayoutTransform>
                <Grid Height="{Binding ElementName=ticks, Path=ActualHeight}"/>
            </Grid>
            <Border Grid.Row="1" Grid.Column="0" Background="{Binding ElementName=ticks, Path=DataContext.ActiveTickBrush}" Height="1" Margin="0,-4,0,-4" VerticalAlignment="Center" Width="6" HorizontalAlignment="Right" SnapsToDevicePixels="True"/>
            <Border Grid.Row="1" Grid.Column="2" Background="{Binding ElementName=ticks, Path=DataContext.ActiveTickBrush}" Height="1" Margin="0,-4,0,-4" VerticalAlignment="Center" Width="6" HorizontalAlignment="Left" SnapsToDevicePixels="True"
                                        Visibility="{Binding Label, Converter={x:Static v:ValueToVisibilityConverter.CollapsedWhenNotEqual}, ConverterParameter={x:Null}}"/>
            <TextBlock Grid.Row="1" Grid.Column="2" Text="{Binding Label}" Foreground="{x:Static w:Resources.ForegroundBrush}" FontSize="9" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,-10,-20,-10"/>
        </Grid>
    </DataTemplate>
    
    <ControlTemplate x:Key="MeteredSliderDefaultTemplate" TargetType="Control">
        <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" IsSharedSizeScope="True">
            <ItemsControl x:Name="ticks"  ItemsSource="{Binding Ticks}" IsHitTestVisible="False" Margin="0,5" ItemTemplate="{StaticResource TickTemplate}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
            <Slider
                    IsEnabled="{Binding IsEnabled}"
                    Orientation="Vertical"
                    Focusable ="False"
                    SnapsToDevicePixels ="True"
                    OverridesDefaultStyle ="True"
                    Value="{Binding SliderPosition}"
                    Minimum="0"
                    Maximum="1">

                <Slider.Style>
                    <Style TargetType="Slider">
                        <Setter Property="MinWidth" Value="12"/>
                        <Setter Property="MinHeight" Value="60"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Slider">
                                    <Grid>
                                        <Control Template="{Binding TrackTemplate}"/>
                                        <Track x:Name="PART_Track">
                                            <Track.Thumb>
                                                <Thumb Template="{Binding ThumbTemplate}"/>
                                            </Track.Thumb>
                                            <Track.Style>
                                                <Style TargetType="Track">
                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsMeterWhenDisabled}" Value="False">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsEnabled}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Track.Style>
                                        </Track>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Orientation}" Value="Horizontal">
                                <Setter Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="90"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Slider.Style>
            </Slider>
        </Grid>
    </ControlTemplate>
    
    <ControlTemplate x:Key="BendModDefaultTemplate" TargetType="c:BendModPanel">
        <GroupBox Style="{x:Static w:Resources.BoxStyle}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" Header="">
            <UniformGrid Rows="1" Columns="2">

                <GroupBox Width="{x:Static w:Resources.DefaultInputColumnWidth}" Header="Bend" Template="{x:Static w:Resources.InputColumnTemplate}" 
                          VerticalContentAlignment="Stretch" HorizontalContentAlignment="Center">
                    <Grid>
                        <Rectangle Stroke="White" StrokeThickness="1" Height="1.5" VerticalAlignment="Center" Margin="-4,0"/>                        
                        <c:MeteredSlider Grid.Row="0" Style="{StaticResource ModWheelStyle}"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PitchBendAmount}" Minimum="-1" Maximum="1" Indenting="Always">
                            <c:SliderTick Value="0"/>
                        </c:MeteredSlider>
                    </Grid>
                </GroupBox>

                <GroupBox Width="{x:Static w:Resources.DefaultInputColumnWidth}" Header="Mod" Template="{x:Static w:Resources.InputColumnTemplate}"
                          VerticalContentAlignment="Stretch" HorizontalContentAlignment="Center">
                    <c:MeteredSlider Style="{StaticResource ModWheelStyle}" Minimum="0" Maximum="1" ScaleFactor="2"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ModulationAmount, Converter={x:Static v:WritableDoubleSettingConverter.Instance}, ConverterParameter=ModulationAmount}"/>
                </GroupBox>

            </UniformGrid>
        </GroupBox>
    </ControlTemplate>
</ResourceDictionary>
