<UserControl x:Class="Synth.WPF.Controls.Keyboard"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:c="clr-namespace:Synth.WPF.Controls"
             xmlns:v="clr-namespace:Synth.WPF.Converters"
             xmlns:util="clr-namespace:Synth.WPF.Util"
             xmlns:wpf="clr-namespace:Synth.WPF"
             mc:Ignorable="d" 
             x:Name="KybdRoot"
             DataContext="{Binding RelativeSource={RelativeSource Self}}">
    
    <UserControl.Resources>
        <ResourceDictionary>
            <Style TargetType="TextBlock" BasedOn="{x:Static wpf:Resources.DefaultTextStyle}"/>
            <Style TargetType="TextBox" BasedOn="{x:Static wpf:Resources.DefaultTextStyle}"/>
            <Style TargetType="Button" BasedOn="{x:Static wpf:Resources.DefaultTextStyle}"/>
            <Style TargetType="CheckBox" BasedOn="{x:Static wpf:Resources.DefaultTextStyle}"/>
            <Style TargetType="ListBox" BasedOn="{x:Static wpf:Resources.DefaultTextStyle}"/>
            <Style TargetType="ComboBox" BasedOn="{x:Static wpf:Resources.DefaultTextStyle}"/>

            <Style x:Key="KeyPressStyle" TargetType="Border">
                <Setter Property="Opacity" Value="0"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ToggleButton}, Path=IsChecked}"
                             Value="True">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.05" To="1" Storyboard.TargetProperty="Opacity"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.1" To="0" Storyboard.TargetProperty="Opacity"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.ExitActions>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        
            <DataTemplate x:Key="WhiteKeyTemplate">
                <ToggleButton IsChecked="{Binding Value}" 
                              util:AttachedProperties.IsMomentary="{Binding ElementName=KybdRoot, Path=IsSustained, Converter={x:Static v:BooleanNegationConverter.Instance}}"
                              util:AttachedProperties.IsToggleOnMouseDown="True">
                    <ToggleButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid>
                                <Image Source="WhiteKey.png"/>
                                <Grid ClipToBounds="True" Margin="2,1,2,1" Opacity="0.3">
                                    <Border Background="Blue" Style="{StaticResource KeyPressStyle}">
                                        <Rectangle VerticalAlignment="Top" Height="3" Fill="Black" Opacity="1"/>
                                    </Border>
                                </Grid>
                            </Grid>
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>
            </DataTemplate>

            <DataTemplate x:Key="BlackKeyTemplateBase">
                <ToggleButton DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ContentControl}, Path=Tag}"
                              IsChecked="{Binding Value}"
                              util:AttachedProperties.IsMomentary="{Binding ElementName=KybdRoot, Path=IsSustained, Converter={x:Static v:BooleanNegationConverter.Instance}}"
                              util:AttachedProperties.IsToggleOnMouseDown="True">
                    <ToggleButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid>
                                <Image Source="BlackKey.png" VerticalAlignment="Top"/>
                                <Grid ClipToBounds="True" Margin="8,2,8,78" Opacity="0.85">
                                    <Border CornerRadius="6" Background="SkyBlue" Margin="0,-5,0,0" Style="{StaticResource KeyPressStyle}">
                                        <Rectangle VerticalAlignment="Top" Height="7" Fill="Black" Opacity="0.4"/>
                                    </Border>
                                </Grid>
                            </Grid>
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>
            </DataTemplate>

            <DataTemplate x:Key="BlackKeyTemplateG">
                <ContentControl Margin="-17,0,-17,0" ContentTemplate="{StaticResource BlackKeyTemplateBase}" Tag="{Binding RelativeSource={RelativeSource Self}, Path=DataContext, Mode=OneWay}"/>
            </DataTemplate>

            <DataTemplate x:Key="BlackKeyTemplateC">
                <ContentControl Margin="-20,0,-14,0" ContentTemplate="{StaticResource BlackKeyTemplateBase}" Tag="{Binding RelativeSource={RelativeSource Self}, Path=DataContext, Mode=OneWay}"/>
            </DataTemplate>

            <DataTemplate x:Key="BlackKeyTemplateD">
                <ContentControl Margin="-14,0,-20,0" ContentTemplate="{StaticResource BlackKeyTemplateBase}" Tag="{Binding RelativeSource={RelativeSource Self}, Path=DataContext, Mode=OneWay}"/>
            </DataTemplate>

        </ResourceDictionary>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="3"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" x:Name="ConfigStrip"
              Visibility="{Binding IsConfigBarVisible, Converter={x:Static v:ValueToVisibilityConverter.CollapsedWhenNotEqual}, ConverterParameter=True}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <ToggleButton x:Name="ShowKeyShiftButton"  Grid.Column="0" Margin="7,-50,0,-6" Style="{x:Static wpf:Resources.MouseOverEmphasisStyle}"
                          FontFamily="Segoe UI Symbol" Content="" Foreground="{x:Static wpf:Resources.ForegroundBrush}" FontSize="20" VerticalAlignment="Bottom">
                <ToggleButton.Template>
                    <ControlTemplate TargetType="ToggleButton">
                        <ContentPresenter Cursor="Hand"/>
                    </ControlTemplate>
                </ToggleButton.Template>
            </ToggleButton>
        
            <Grid Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="-10,0,20,0" Width="0" ClipToBounds="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="0"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="0"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="0"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="0.25*"/>
                    <ColumnDefinition Width="0"/>
                    <ColumnDefinition Width="0.25*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="0"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="0"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="0"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Width" Value="0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=ShowKeyShiftButton, Path=IsChecked}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Width" To="175" Duration="0:0:0.4">
                                                <DoubleAnimation.EasingFunction>
                                                    <ElasticEase Oscillations="1" EasingMode="EaseOut" Springiness="6"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Width" To="0" Duration="0:0:0.15"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <Grid.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Template" Value="{x:Static wpf:Resources.ContentOnlyTemplate}"/>
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <ContentControl Content="{TemplateBinding Content}" Style="{x:Static wpf:Resources.MouseOverEmphasisStyle}"/>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Command" Value="{Binding ShiftKeysCommand}"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="-999,0"/>
                        <Setter Property="Foreground" Value="{x:Static wpf:Resources.ForegroundBrush}"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                    </Style>
                    
                    <PathGeometry x:Key="ArrowGeometry">
                        <PathGeometry.Figures>
                            <PathFigureCollection>
                                <PathFigure StartPoint="0,0" IsClosed="True">
                                    <PathFigure.Segments>
                                        <PathSegmentCollection>
                                            <PolyLineSegment Points="0,0 1,0.5 0,1" />
                                        </PathSegmentCollection>
                                    </PathFigure.Segments>
                                </PathFigure>
                            </PathFigureCollection>
                        </PathGeometry.Figures>
                    </PathGeometry>
                    
                    <Style x:Key="ArrowPathStyle" TargetType="Path">
                        <Setter Property="Fill" Value="{x:Static wpf:Resources.ForegroundBrush}"/>
                        <Setter Property="StrokeThickness" Value="1"/>
                        <Setter Property="Stretch" Value="Fill"/>
                        <Setter Property="Height" Value="14"/>
                        <Setter Property="Width" Value="7"/>
                        <Setter Property="Data" Value="{StaticResource ArrowGeometry}"/>
                    </Style>

                    <ScaleTransform x:Key="HMirrorTransform" ScaleX="-1"/>
                </Grid.Resources>
                
                <Button Grid.Column="1" CommandParameter="-13" LayoutTransform="{StaticResource HMirrorTransform}" ToolTip="Lowest range">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Path Style="{StaticResource ArrowPathStyle}"/>
                        <Rectangle Fill="{x:Static wpf:Resources.ForegroundBrush}" Width="2" Margin="0,1"/>
                    </StackPanel>
                </Button>

                <Button Grid.Column="3" CommandParameter="-12" LayoutTransform="{StaticResource HMirrorTransform}" ToolTip="Down one octave">
                    <Grid>
                        <Path Style="{StaticResource ArrowPathStyle}"/>
                        <Path Style="{StaticResource ArrowPathStyle}" Margin="10,0,0,0"/>
                    </Grid>
                </Button>

                <Button Grid.Column="5" CommandParameter="-1" LayoutTransform="{StaticResource HMirrorTransform}" ToolTip="Down one key">
                    <Path Style="{StaticResource ArrowPathStyle}"/>
                </Button>

                <Border Grid.Column="8" Style="{x:Static wpf:Resources.MouseOverEmphasisStyle}">
                    <ComboBox ItemsSource="{Binding WhiteKeyNotes}" DisplayMemberPath="Name" SelectedItem="{Binding BottomNote}" 
                              IsEditable="False" Width="35" VerticalAlignment="Center" Foreground="{x:Static wpf:Resources.ForegroundBrush}" Background="Transparent"  FontWeight="Bold" Margin="-999,0,-999,-0" HorizontalAlignment="Center" Padding="3"
                              Template="{x:Static wpf:Resources.SimpleComboBoxTemplate}" ToolTip="Select bottom note" Cursor="Hand">
                        <ComboBox.Style>
                            <Style TargetType="ComboBox" >
                                <Style.Triggers>
                                    <Trigger Property="IsDropDownOpen" Value="True">
                                        <Setter Property="Effect" Value="{x:Null}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ComboBox.Style>
                    </ComboBox>
                </Border>

                <Button Grid.Column="11" CommandParameter="1" ToolTip="Up one key">
                    <Path Style="{StaticResource ArrowPathStyle}"/>
                </Button>

                <Button Grid.Column="13" CommandParameter="12" ToolTip="Up one octave">
                    <Grid>
                        <Path Style="{StaticResource ArrowPathStyle}"/>
                        <Path Style="{StaticResource ArrowPathStyle}" Margin="10,0,0,0"/>
                    </Grid>
                </Button>

                <Button Grid.Column="15" CommandParameter="13" Margin="-999,0" HorizontalAlignment="Center" ToolTip="Highest range">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Path Style="{StaticResource ArrowPathStyle}"/>
                        <Rectangle Fill="{x:Static wpf:Resources.ForegroundBrush}" Width="2" Margin="0,1"/>
                    </StackPanel>
                </Button>
            </Grid>
            
            <Border Grid.Column="2" Margin="10,0" VerticalAlignment="Center" Padding="6,0" Width="100">
                <Grid>
                    <TextBlock Foreground="{x:Static wpf:Resources.ForegroundBrush}" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="UltraBlack"
                                Text="{Binding VelocityLabel, Converter={x:Static v:LetterSpacingConverter.ToUpperCase}}"/>
                    <c:MeteredSlider Orientation="Horizontal" VerticalAlignment="Center" Style="{x:Static wpf:Resources.ControlSliderStyle}" 
                             Value="{Binding Path=Velocity, Converter={x:Static v:WritableDoubleSettingConverter.Instance}, ConverterParameter=KeyboardVelocity}">
                        <c:MeteredSlider.TrackTemplate>
                            <ControlTemplate>
                                <Border Background="{x:Static wpf:Resources.ForegroundBrush}" Width="1" HorizontalAlignment="Center"/>
                            </ControlTemplate>
                        </c:MeteredSlider.TrackTemplate>
                    </c:MeteredSlider>
                </Grid>
            </Border>

            <ToggleButton Grid.Column="3" Margin="16,0,26,0" VerticalAlignment="Center" Style="{x:Static wpf:Resources.MouseOverEmphasisStyle}"
                    Foreground="{x:Static wpf:Resources.ForegroundBrush}" FontWeight="UltraBlack" IsChecked="{Binding Path=IsSustained}" 
                    FontSize="9" SnapsToDevicePixels="True" Template="{x:Static wpf:Resources.ToggleTemplate}"
                    Content="{Binding SustainLabel, Converter={x:Static v:LetterSpacingConverter.ToUpperCase}}" />
        </Grid>

        <ItemsControl Grid.Row="1" x:Name="KeyPanel"  Margin="3,3,3,3" Background="Black" HorizontalAlignment="Left"
                      ItemsSource="{Binding Path=Notes}" 
                      ItemTemplateSelector="{x:Static c:KeyTemplateSelector.Instance}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemContainerStyle>
                <Style TargetType="ContentPresenter">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Item.Name, Converter={x:Static v:TextToBooleanConverter.StringContains}, ConverterParameter='#'}" Value="True">
                            <Setter Property="Panel.ZIndex" Value="99"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ItemsControl.ItemContainerStyle>
        </ItemsControl>
    </Grid>
</UserControl>
